{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "gitlab.fullname" . }}-postgresql
  labels:
    app: {{ template "gitlab.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "gitlab.name" . }}
      release: {{ .Release.Name }}
      component: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "gitlab.name" . }}
        release: {{ .Release.Name }}
        component: postgresql
    spec:
      {{- if and .Values.gitlab.nodeAffinity.selectorMatch.key .Values.gitlab.nodeAffinity.selectorMatch.values }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.gitlab.nodeAffinity.selectorMatch.key }}
                operator: In
                values:
                {{- range .Values.gitlab.nodeAffinity.selectorMatch.values }}
                - {{ . }}
                {{- end }}
      {{- end }}
      containers:
      - name: postgresql
        image: {{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        ports:
        - name: postgresql
          containerPort: 5432
        env:
        - name: DB_EXTENSION
          value: {{ .Values.postgresql.db.extension | quote }}
        - name: DB_NAME
          value: {{ .Values.postgresql.db.name | quote }}
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ template "gitlab.fullname" . }}
              key: dbPassword
        #   value: {{ .Values.postgresql.db.pass }}
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "gitlab.fullname" . }}
              key: dbUser
        #   value: {{ .Values.postgresql.db.user }}
        volumeMounts:
        - mountPath: /var/lib/postgresql
          name: gitlab-postgresql
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 5
          timeoutSeconds: 1
      restartPolicy: Always
      volumes:
      - name: gitlab-postgresql
      {{- if .Values.postgresql.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "gitlab.fullname" . }}-postgresql
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- end }}
